stages:
  - build
  - lint
  - test
  - ci
  - build_docker

default:
  image: node:latest
  tags:
    - famedly
    - docker
  cache:
    paths:
      - node_modules/
      - build/

build:
  # Npm install / npm run build this thing
  stage: build
  script:
    - npm install
    - npm run build
  artifacts:
    when: always
    paths:
      - node_modules/
      - build/

lint:
  # Verify the linting
  stage: lint
  script:
    - npm run lint

test:
  # Run the tests
  stage: test
  script:
    - npm run test

.docker: &docker_template
  image: docker:latest
  stage: build_docker
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

docker-releases:
  <<: *docker_template
  script:
    - docker build --pull -t "${CI_REGISTRY_IMAGE}:latest" -t "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}" .
    - docker push "${CI_REGISTRY_IMAGE}:latest"
    - docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
  rules:
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'

docker-tags:
  <<: *docker_template
  script:
    - docker build --pull -t "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}" .
    - docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
  rules:
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_TAG !~ /^v\d+\.\d+\.\d+$/'

docker-branches:
  <<: *docker_template
  script:
    - docker build --pull -t "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}" .
    - docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}"
  rules:
    - if: $CI_COMMIT_BRANCH

.enable_ssh: &enable_ssh |-
  eval `ssh-agent -s`
  echo "$CI_SSH_PRIVATE_KEY" | ssh-add -
  mkdir -p ~/.ssh
  echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

.devenv: &devenv |-
  echo "$CI_REGISTRY_PASSWORD" | docker login "$CI_REGISTRY" --username "$CI_REGISTRY_USER" --password-stdin
  echo "127.0.0.1 dev.famedly.local admin.dev.famedly.local" | sudo tee --append /etc/hosts
  git clone --recursive git@gitlab.com:famedly/ansible/environments/dev.git
  cd dev
  ./dev.sh up
  docker ps -as
  curl -v http://dev.famedly.local:7080

.rust: &rust |-
  sudo apt install -y build-essential cmake libssl-dev pkg-config
  curl https://sh.rustup.rs -sSf | sh -s -- -y
  source $HOME/.cargo/env
  rustup install stable

e2e-test:
  image: deb10-docker.qcow2
  stage: ci
  tags:
    - famedly
    - libvirt
    - generic
  before_script:
    - *enable_ssh
    - *rust
    - *devenv
    - 'git config --global url."git@gitlab.com:".insteadOf https://gitlab.com/'
  script:
    - cargo test -- --nocapture
